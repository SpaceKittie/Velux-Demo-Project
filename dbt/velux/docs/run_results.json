{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.9.6", "generated_at": "2025-06-02T15:16:02.303787Z", "invocation_id": "51bbdcc4-5bb6-4073-88b2-6cecac01f52f", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-02T15:15:58.918148Z", "completed_at": "2025-06-02T15:15:58.930884Z"}, {"name": "execute", "started_at": "2025-06-02T15:15:58.930884Z", "completed_at": "2025-06-02T15:15:58.930884Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.016240358352661133, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.velux.stg_accuweather_hourly", "compiled": true, "compiled_code": "\n\n\nWITH source_data AS (\n    SELECT * FROM SAMPLE_OF_ACCUWEATHERS_HISTORICAL_WEATHER_DATA.HISTORICAL.TOP_CITY_HOURLY_METRIC\n)\nSELECT\n    DATETIME AS weather_timestamp,\n    CITY_NAME AS city_name,\n    COUNTRY_CODE AS country_code,\n    TEMPERATURE::FLOAT AS outdoor_temperature_celsius,           \n    TEMPERATURE_DEW_POINT::FLOAT AS dew_point_temperature_celsius, \n    PRESSURE_MSL::FLOAT AS mean_sea_level_pressure_hpa,          \n    WIND_SPEED::FLOAT AS wind_speed_ms,                                                             \n    VISIBILITY::FLOAT AS visibility_km,                            \n    SOLAR_IRRADIANCE::FLOAT AS solar_irradiance_w_m2,              \n    INDEX_UV::FLOAT AS uv_index,\n    MINUTES_OF_SUN::FLOAT AS sunshine_duration_minutes,\n    PRECIPITATION_TYPE_DESC AS precipitation_type_description\n\nFROM source_data", "relation_name": "VELUX_DEV.STAGING.stg_accuweather_hourly", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-02T15:15:58.927070Z", "completed_at": "2025-06-02T15:15:58.932595Z"}, {"name": "execute", "started_at": "2025-06-02T15:15:58.933503Z", "completed_at": "2025-06-02T15:15:58.933503Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.017861366271972656, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.velux.stg_iot_data", "compiled": true, "compiled_code": "\n\n\nwith source_data as (\n    select *\n    from velux_dev.raw.iot_data\n)\n\nselect\n    datetime::timestamp_ntz as event_timestamp,\n    country::varchar as country,\n    city::varchar as city,\n    device_id::varchar as device_id,\n    co2_bedroom_ppm::float as co2_bedroom_ppm,\n    co2_kitchen_ppm::float as co2_kitchen_ppm,\n    rh_bedroom_pct::float as rh_bedroom_pct,\n    rh_kitchen_pct::float as rh_kitchen_pct,\n    rh_outdoor_pct::float as rh_outdoor_pct,\n    indoor_temperature_c::float as indoor_temperature_c,\n    outdoor_temperature_c::float as outdoor_temperature_c\n\nfrom source_data", "relation_name": "VELUX_DEV.STAGING.stg_iot_data", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-02T15:15:58.942857Z", "completed_at": "2025-06-02T15:15:59.004942Z"}, {"name": "execute", "started_at": "2025-06-02T15:15:59.009491Z", "completed_at": "2025-06-02T15:15:59.009491Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.07248473167419434, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.velux.dbt_utils_unique_combination_of_columns_stg_accuweather_hourly_weather_timestamp__city_name__country_code.1e0eb90a13", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        weather_timestamp, city_name, country_code\n    from VELUX_DEV.STAGING.stg_accuweather_hourly\n    group by weather_timestamp, city_name, country_code\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-02T15:15:58.959135Z", "completed_at": "2025-06-02T15:15:59.006603Z"}, {"name": "execute", "started_at": "2025-06-02T15:15:59.009491Z", "completed_at": "2025-06-02T15:15:59.009491Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.0719761848449707, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.velux.not_null_stg_accuweather_hourly_city_name.20318c53f2", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect city_name\nfrom VELUX_DEV.STAGING.stg_accuweather_hourly\nwhere city_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-02T15:15:58.968833Z", "completed_at": "2025-06-02T15:15:59.007467Z"}, {"name": "execute", "started_at": "2025-06-02T15:15:59.011130Z", "completed_at": "2025-06-02T15:15:59.011130Z"}], "thread_id": "Thread-5 (worker)", "execution_time": 0.07361602783203125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.velux.not_null_stg_accuweather_hourly_country_code.fc4c53b85d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect country_code\nfrom VELUX_DEV.STAGING.stg_accuweather_hourly\nwhere country_code is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-02T15:15:58.972937Z", "completed_at": "2025-06-02T15:15:59.007467Z"}, {"name": "execute", "started_at": "2025-06-02T15:15:59.011636Z", "completed_at": "2025-06-02T15:15:59.011636Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0725870132446289, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.velux.not_null_stg_accuweather_hourly_weather_timestamp.70cb22ff57", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect weather_timestamp\nfrom VELUX_DEV.STAGING.stg_accuweather_hourly\nwhere weather_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-02T15:15:59.024401Z", "completed_at": "2025-06-02T15:15:59.046030Z"}, {"name": "execute", "started_at": "2025-06-02T15:15:59.047962Z", "completed_at": "2025-06-02T15:15:59.047962Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.031003952026367188, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.velux.dbt_utils_unique_combination_of_columns_stg_iot_data_event_timestamp__device_id.e52fe9fcb8", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        event_timestamp, device_id\n    from VELUX_DEV.STAGING.stg_iot_data\n    group by event_timestamp, device_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-02T15:15:59.030450Z", "completed_at": "2025-06-02T15:15:59.046965Z"}, {"name": "execute", "started_at": "2025-06-02T15:15:59.049607Z", "completed_at": "2025-06-02T15:15:59.049607Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.03064274787902832, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.velux.not_null_stg_iot_data_city.ec8f0b979f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect city\nfrom VELUX_DEV.STAGING.stg_iot_data\nwhere city is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-02T15:15:59.035652Z", "completed_at": "2025-06-02T15:15:59.047962Z"}, {"name": "execute", "started_at": "2025-06-02T15:15:59.051772Z", "completed_at": "2025-06-02T15:15:59.051772Z"}], "thread_id": "Thread-5 (worker)", "execution_time": 0.03189873695373535, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.velux.not_null_stg_iot_data_country.8a419ce412", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect country\nfrom VELUX_DEV.STAGING.stg_iot_data\nwhere country is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-02T15:15:59.040169Z", "completed_at": "2025-06-02T15:15:59.049607Z"}, {"name": "execute", "started_at": "2025-06-02T15:15:59.052825Z", "completed_at": "2025-06-02T15:15:59.052825Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.03138613700866699, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.velux.not_null_stg_iot_data_device_id.7a15007b23", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect device_id\nfrom VELUX_DEV.STAGING.stg_iot_data\nwhere device_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-02T15:15:59.056022Z", "completed_at": "2025-06-02T15:15:59.061134Z"}, {"name": "execute", "started_at": "2025-06-02T15:15:59.062050Z", "completed_at": "2025-06-02T15:15:59.062050Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.008189201354980469, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.velux.not_null_stg_iot_data_event_timestamp.f9de5c6aa7", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_timestamp\nfrom VELUX_DEV.STAGING.stg_iot_data\nwhere event_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-02T15:15:58.977050Z", "completed_at": "2025-06-02T15:15:59.513983Z"}, {"name": "execute", "started_at": "2025-06-02T15:15:59.513983Z", "completed_at": "2025-06-02T15:15:59.513983Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.573899507522583, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.velux.int_iot_data_unpivotted", "compiled": true, "compiled_code": "\n\nWITH base AS (\n    SELECT\n        event_timestamp,\n        country,\n        city,\n        device_id,\n        co2_bedroom_ppm,\n        co2_kitchen_ppm,\n        rh_bedroom_pct,\n        rh_kitchen_pct,\n        rh_outdoor_pct,\n        indoor_temperature_c,\n        outdoor_temperature_c\n    FROM VELUX_DEV.STAGING.stg_iot_data\n),\n\nunpivoted AS (\n    select\n        event_timestamp,\n        device_id,\n        country,\n        city,\n\n      cast('CO2_BEDROOM_PPM' as TEXT) as sensor_name,\n      cast(  \n           CO2_BEDROOM_PPM\n             \n           as float) as sensor_value\n\n    from VELUX_DEV.STAGING.stg_iot_data\n\n    union all\n    select\n        event_timestamp,\n        device_id,\n        country,\n        city,\n\n      cast('CO2_KITCHEN_PPM' as TEXT) as sensor_name,\n      cast(  \n           CO2_KITCHEN_PPM\n             \n           as float) as sensor_value\n\n    from VELUX_DEV.STAGING.stg_iot_data\n\n    union all\n    select\n        event_timestamp,\n        device_id,\n        country,\n        city,\n\n      cast('RH_BEDROOM_PCT' as TEXT) as sensor_name,\n      cast(  \n           RH_BEDROOM_PCT\n             \n           as float) as sensor_value\n\n    from VELUX_DEV.STAGING.stg_iot_data\n\n    union all\n    select\n        event_timestamp,\n        device_id,\n        country,\n        city,\n\n      cast('RH_KITCHEN_PCT' as TEXT) as sensor_name,\n      cast(  \n           RH_KITCHEN_PCT\n             \n           as float) as sensor_value\n\n    from VELUX_DEV.STAGING.stg_iot_data\n\n    union all\n    select\n        event_timestamp,\n        device_id,\n        country,\n        city,\n\n      cast('RH_OUTDOOR_PCT' as TEXT) as sensor_name,\n      cast(  \n           RH_OUTDOOR_PCT\n             \n           as float) as sensor_value\n\n    from VELUX_DEV.STAGING.stg_iot_data\n\n    union all\n    select\n        event_timestamp,\n        device_id,\n        country,\n        city,\n\n      cast('INDOOR_TEMPERATURE_C' as TEXT) as sensor_name,\n      cast(  \n           INDOOR_TEMPERATURE_C\n             \n           as float) as sensor_value\n\n    from VELUX_DEV.STAGING.stg_iot_data\n\n    union all\n    select\n        event_timestamp,\n        device_id,\n        country,\n        city,\n\n      cast('OUTDOOR_TEMPERATURE_C' as TEXT) as sensor_name,\n      cast(  \n           OUTDOOR_TEMPERATURE_C\n             \n           as float) as sensor_value\n\n    from VELUX_DEV.STAGING.stg_iot_data\n\n    \n),\n\nclassified AS (\n    SELECT\n        event_timestamp,\n        country,\n        city,\n        device_id,\n        CASE\n            WHEN lower(sensor_name) ilike 'co2_bedroom%' THEN 'bedroom'\n            WHEN lower(sensor_name) ilike 'co2_kitchen%' THEN 'kitchen'\n            WHEN lower(sensor_name) ilike 'rh_bedroom%' THEN 'bedroom'\n            WHEN lower(sensor_name) ilike 'rh_kitchen%' THEN 'kitchen'\n            WHEN lower(sensor_name) ilike 'rh_outdoor%' THEN 'outdoor'\n            WHEN lower(sensor_name) = 'indoor_temperature_c' THEN 'indoor'\n            WHEN lower(sensor_name) = 'outdoor_temperature_c' THEN 'outdoor'\n            ELSE 'unknown'\n        END AS room,\n        CASE\n            WHEN lower(sensor_name) ilike 'co2_%' THEN 'co2(parts per million)'\n            WHEN lower(sensor_name) ilike 'rh_%' THEN 'relative_humidity(percent)'\n            WHEN lower(sensor_name) ilike '%temperature_c' THEN 'temperature(celsius)'\n            ELSE 'unknown'\n        END AS sensor_type,\n        sensor_value\n    FROM unpivoted\n    WHERE sensor_value IS NOT NULL\n)\n\nSELECT\n  event_timestamp,\n  country,\n  city,\n  device_id,\n  room,\n  sensor_type,\n  sensor_value\nFROM classified", "relation_name": "VELUX_DEV.STAGING.int_iot_data_unpivotted", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-02T15:15:59.525297Z", "completed_at": "2025-06-02T15:15:59.548754Z"}, {"name": "execute", "started_at": "2025-06-02T15:15:59.549728Z", "completed_at": "2025-06-02T15:15:59.549728Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.0309755802154541, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.velux.int_iot_data_with_weather", "compiled": true, "compiled_code": "\n\nWITH iot_unpivotted_data AS (\n    SELECT\n        event_timestamp,\n        country,\n        city,\n        device_id,\n        room,\n        sensor_type,\n        sensor_value\n    FROM VELUX_DEV.STAGING.int_iot_data_unpivotted\n),\n\nstaged_weather_data AS (\n    SELECT\n        weather_timestamp,\n        city_name,\n        country_code,\n        outdoor_temperature_celsius,\n        dew_point_temperature_celsius,\n        mean_sea_level_pressure_hpa,\n        wind_speed_ms,\n        visibility_km,\n        solar_irradiance_w_m2,\n        uv_index,\n        sunshine_duration_minutes,\n        precipitation_type_description\n    FROM VELUX_DEV.STAGING.stg_accuweather_hourly\n)\nSELECT\n    iot_unpivotted_data.event_timestamp,\n    iot_unpivotted_data.country,\n    iot_unpivotted_data.city,      \n    iot_unpivotted_data.device_id,\n    iot_unpivotted_data.room,\n    iot_unpivotted_data.sensor_type,\n    iot_unpivotted_data.sensor_value,\n\n    staged_weather_data.outdoor_temperature_celsius,\n    staged_weather_data.dew_point_temperature_celsius,\n    staged_weather_data.mean_sea_level_pressure_hpa,\n    staged_weather_data.wind_speed_ms,\n    staged_weather_data.visibility_km,\n    staged_weather_data.solar_irradiance_w_m2,\n    staged_weather_data.uv_index,\n    staged_weather_data.sunshine_duration_minutes,\n    staged_weather_data.precipitation_type_description\n\nFROM iot_unpivotted_data\nLEFT JOIN staged_weather_data\n    ON iot_unpivotted_data.city = staged_weather_data.city_name\n    AND iot_unpivotted_data.event_timestamp = staged_weather_data.weather_timestamp\n    AND iot_unpivotted_data.country = staged_weather_data.country_code", "relation_name": "VELUX_DEV.STAGING.int_iot_data_with_weather", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-02T15:15:59.529688Z", "completed_at": "2025-06-02T15:15:59.549728Z"}, {"name": "execute", "started_at": "2025-06-02T15:15:59.552497Z", "completed_at": "2025-06-02T15:15:59.552497Z"}], "thread_id": "Thread-5 (worker)", "execution_time": 0.032845497131347656, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.velux.dbt_utils_unique_combination_of_columns_int_iot_data_unpivotted_event_timestamp__device_id__room__sensor_type.e3b5c1add3", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        event_timestamp, device_id, room, sensor_type\n    from VELUX_DEV.STAGING.int_iot_data_unpivotted\n    group by event_timestamp, device_id, room, sensor_type\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-02T15:15:59.534795Z", "completed_at": "2025-06-02T15:15:59.551583Z"}, {"name": "execute", "started_at": "2025-06-02T15:15:59.555658Z", "completed_at": "2025-06-02T15:15:59.555658Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.03504037857055664, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.velux.not_null_int_iot_data_unpivotted_city.e089e346c0", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect city\nfrom VELUX_DEV.STAGING.int_iot_data_unpivotted\nwhere city is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-02T15:15:59.539924Z", "completed_at": "2025-06-02T15:15:59.552497Z"}, {"name": "execute", "started_at": "2025-06-02T15:15:59.555658Z", "completed_at": "2025-06-02T15:15:59.555658Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.03601694107055664, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.velux.not_null_int_iot_data_unpivotted_country.903cdf6125", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect country\nfrom VELUX_DEV.STAGING.int_iot_data_unpivotted\nwhere country is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-02T15:15:59.544173Z", "completed_at": "2025-06-02T15:15:59.552497Z"}, {"name": "execute", "started_at": "2025-06-02T15:15:59.556715Z", "completed_at": "2025-06-02T15:15:59.556715Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.036096811294555664, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.velux.not_null_int_iot_data_unpivotted_device_id.522d828ef9", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect device_id\nfrom VELUX_DEV.STAGING.int_iot_data_unpivotted\nwhere device_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-02T15:15:59.564189Z", "completed_at": "2025-06-02T15:15:59.584466Z"}, {"name": "execute", "started_at": "2025-06-02T15:15:59.599476Z", "completed_at": "2025-06-02T15:15:59.599476Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.040814876556396484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.velux.not_null_int_iot_data_unpivotted_event_timestamp.ba8cd711d9", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_timestamp\nfrom VELUX_DEV.STAGING.int_iot_data_unpivotted\nwhere event_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-02T15:15:59.576077Z", "completed_at": "2025-06-02T15:15:59.599476Z"}, {"name": "execute", "started_at": "2025-06-02T15:15:59.603030Z", "completed_at": "2025-06-02T15:15:59.603030Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.041344404220581055, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.velux.not_null_int_iot_data_unpivotted_sensor_type.8f4d539301", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect sensor_type\nfrom VELUX_DEV.STAGING.int_iot_data_unpivotted\nwhere sensor_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-02T15:15:59.570724Z", "completed_at": "2025-06-02T15:15:59.600993Z"}, {"name": "execute", "started_at": "2025-06-02T15:15:59.604532Z", "completed_at": "2025-06-02T15:15:59.604532Z"}], "thread_id": "Thread-5 (worker)", "execution_time": 0.0438692569732666, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.velux.not_null_int_iot_data_unpivotted_room.81de36354d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect room\nfrom VELUX_DEV.STAGING.int_iot_data_unpivotted\nwhere room is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-02T15:15:59.580269Z", "completed_at": "2025-06-02T15:15:59.602026Z"}, {"name": "execute", "started_at": "2025-06-02T15:15:59.605974Z", "completed_at": "2025-06-02T15:15:59.605974Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.0432889461517334, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.velux.not_null_int_iot_data_unpivotted_sensor_value.35de21c6e5", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect sensor_value\nfrom VELUX_DEV.STAGING.int_iot_data_unpivotted\nwhere sensor_value is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-02T15:15:59.585510Z", "completed_at": "2025-06-02T15:15:59.603030Z"}, {"name": "execute", "started_at": "2025-06-02T15:15:59.607487Z", "completed_at": "2025-06-02T15:15:59.607487Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.044802188873291016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.velux.dim_locations", "compiled": true, "compiled_code": "\n\nWITH location_data AS (\n    SELECT DISTINCT\n        city,\n        country\n    FROM VELUX_DEV.STAGING.int_iot_data_with_weather\n)\n\nSELECT\n    md5(cast(coalesce(cast(city as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(country as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) AS location_id,\n    city,\n    country\n\nFROM location_data", "relation_name": "VELUX_DEV.MARTS.dim_locations", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-02T15:15:59.613496Z", "completed_at": "2025-06-02T15:15:59.626246Z"}, {"name": "execute", "started_at": "2025-06-02T15:15:59.639888Z", "completed_at": "2025-06-02T15:15:59.639888Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.033306121826171875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.velux.dim_sensors", "compiled": true, "compiled_code": "\n\nWITH sensor_types AS (\n    SELECT\n        sensor_type,\n        CASE\n            WHEN sensor_type = 'co2(parts per million)' THEN 'ppm'\n            WHEN sensor_type = 'relative_humidity(percent)' THEN '%'\n            WHEN sensor_type = 'temperature(celsius)' THEN '\u00b0C'\n            ELSE 'unknown'\n        END AS measurement_unit\n    FROM (\n        SELECT DISTINCT sensor_type\n        FROM VELUX_DEV.STAGING.int_iot_data_with_weather\n    )\n),\n\nrooms AS (\n    SELECT DISTINCT room\n    FROM VELUX_DEV.STAGING.int_iot_data_with_weather\n    WHERE room IS NOT NULL\n),\n\nsensor_data AS (\n    SELECT DISTINCT\n        room,\n        sensor_type,\n        device_id\n    FROM VELUX_DEV.STAGING.int_iot_data_with_weather\n)\n\nSELECT\n    md5(cast(coalesce(cast(sd.sensor_type as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(sd.device_id as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(sd.room as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) AS sensor_id,\n    sd.device_id,\n    sd.room,\n    sd.sensor_type,\n    st.measurement_unit\n\nFROM sensor_data sd\nJOIN sensor_types st ON sd.sensor_type = st.sensor_type", "relation_name": "VELUX_DEV.MARTS.dim_sensors", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-02T15:15:59.621508Z", "completed_at": "2025-06-02T15:15:59.640897Z"}, {"name": "execute", "started_at": "2025-06-02T15:15:59.644090Z", "completed_at": "2025-06-02T15:15:59.644090Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.03260016441345215, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.velux.dim_time", "compiled": true, "compiled_code": "\n\nWITH base_time AS (\n    SELECT DISTINCT event_timestamp\n    FROM VELUX_DEV.STAGING.int_iot_data_with_weather\n)\n\nSELECT\n    md5(cast(coalesce(cast(event_timestamp as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) AS time_id,\n    DATE(event_timestamp) AS event_date,\n    event_timestamp,\n    EXTRACT(HOUR FROM event_timestamp) AS hour_of_day,\n    EXTRACT(DOW FROM event_timestamp) AS day_of_week,\n    EXTRACT(DAY FROM event_timestamp) AS day_of_month,\n    EXTRACT(MONTH FROM event_timestamp) AS month_number,\n    EXTRACT(YEAR FROM event_timestamp) AS year_number,\n    CASE \n        WHEN EXTRACT(DOW FROM event_timestamp) IN (0, 6) THEN TRUE \n        ELSE FALSE \n    END AS is_weekend,\n    CASE\n        WHEN EXTRACT(MONTH FROM event_timestamp) IN (12, 1, 2) THEN 'Winter'\n        WHEN EXTRACT(MONTH FROM event_timestamp) IN (3, 4, 5) THEN 'Spring'\n        WHEN EXTRACT(MONTH FROM event_timestamp) IN (6, 7, 8) THEN 'Summer'\n        WHEN EXTRACT(MONTH FROM event_timestamp) IN (9, 10, 11) THEN 'Fall'\n    END AS season,\n    DAYNAME(event_timestamp) AS day_name,\n    MONTHNAME(event_timestamp) AS month_name\n    \nFROM base_time", "relation_name": "VELUX_DEV.MARTS.dim_time", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-02T15:15:59.626754Z", "completed_at": "2025-06-02T15:15:59.641897Z"}, {"name": "execute", "started_at": "2025-06-02T15:15:59.644949Z", "completed_at": "2025-06-02T15:15:59.645950Z"}], "thread_id": "Thread-5 (worker)", "execution_time": 0.034459829330444336, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.velux.dbt_utils_unique_combination_of_columns_int_iot_data_with_weather_event_timestamp__device_id__room__sensor_type.c1e221b8b2", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        event_timestamp, device_id, room, sensor_type\n    from VELUX_DEV.STAGING.int_iot_data_with_weather\n    group by event_timestamp, device_id, room, sensor_type\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-02T15:15:59.630863Z", "completed_at": "2025-06-02T15:15:59.642419Z"}, {"name": "execute", "started_at": "2025-06-02T15:15:59.645950Z", "completed_at": "2025-06-02T15:15:59.645950Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.0349574089050293, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.velux.not_null_int_iot_data_with_weather_city.6b64d45411", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect city\nfrom VELUX_DEV.STAGING.int_iot_data_with_weather\nwhere city is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-02T15:15:59.635616Z", "completed_at": "2025-06-02T15:15:59.644949Z"}, {"name": "execute", "started_at": "2025-06-02T15:15:59.648055Z", "completed_at": "2025-06-02T15:15:59.648055Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.030041933059692383, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.velux.not_null_int_iot_data_with_weather_country.25a8549049", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect country\nfrom VELUX_DEV.STAGING.int_iot_data_with_weather\nwhere country is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-02T15:15:59.654076Z", "completed_at": "2025-06-02T15:15:59.667288Z"}, {"name": "execute", "started_at": "2025-06-02T15:15:59.677864Z", "completed_at": "2025-06-02T15:15:59.677864Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.03191375732421875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.velux.not_null_int_iot_data_with_weather_device_id.aa61cfac82", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect device_id\nfrom VELUX_DEV.STAGING.int_iot_data_with_weather\nwhere device_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-02T15:15:59.662741Z", "completed_at": "2025-06-02T15:15:59.683422Z"}, {"name": "execute", "started_at": "2025-06-02T15:15:59.687058Z", "completed_at": "2025-06-02T15:15:59.687058Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0354611873626709, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.velux.not_null_int_iot_data_with_weather_event_timestamp.3f98ff7746", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_timestamp\nfrom VELUX_DEV.STAGING.int_iot_data_with_weather\nwhere event_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-02T15:15:59.668864Z", "completed_at": "2025-06-02T15:15:59.685550Z"}, {"name": "execute", "started_at": "2025-06-02T15:15:59.689243Z", "completed_at": "2025-06-02T15:15:59.689243Z"}], "thread_id": "Thread-5 (worker)", "execution_time": 0.036673784255981445, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.velux.not_null_int_iot_data_with_weather_room.514eb700a8", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect room\nfrom VELUX_DEV.STAGING.int_iot_data_with_weather\nwhere room is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-02T15:15:59.673450Z", "completed_at": "2025-06-02T15:15:59.685550Z"}, {"name": "execute", "started_at": "2025-06-02T15:15:59.690242Z", "completed_at": "2025-06-02T15:15:59.690242Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.031064510345458984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.velux.not_null_int_iot_data_with_weather_sensor_type.05578b68ad", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect sensor_type\nfrom VELUX_DEV.STAGING.int_iot_data_with_weather\nwhere sensor_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-02T15:15:59.679555Z", "completed_at": "2025-06-02T15:15:59.688065Z"}, {"name": "execute", "started_at": "2025-06-02T15:15:59.691820Z", "completed_at": "2025-06-02T15:15:59.691820Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.031054973602294922, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.velux.not_null_int_iot_data_with_weather_sensor_value.6e05d41e5b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect sensor_value\nfrom VELUX_DEV.STAGING.int_iot_data_with_weather\nwhere sensor_value is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-02T15:15:59.694919Z", "completed_at": "2025-06-02T15:15:59.703029Z"}, {"name": "execute", "started_at": "2025-06-02T15:15:59.709558Z", "completed_at": "2025-06-02T15:15:59.709558Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.021492958068847656, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.velux.not_null_dim_locations_city.1544cc8256", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect city\nfrom VELUX_DEV.MARTS.dim_locations\nwhere city is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-02T15:15:59.704602Z", "completed_at": "2025-06-02T15:15:59.729688Z"}, {"name": "execute", "started_at": "2025-06-02T15:15:59.732201Z", "completed_at": "2025-06-02T15:15:59.732201Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.038446664810180664, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.velux.not_null_dim_locations_country.18b7d518a6", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect country\nfrom VELUX_DEV.MARTS.dim_locations\nwhere country is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-02T15:15:59.711151Z", "completed_at": "2025-06-02T15:15:59.730695Z"}, {"name": "execute", "started_at": "2025-06-02T15:15:59.734331Z", "completed_at": "2025-06-02T15:15:59.734331Z"}], "thread_id": "Thread-5 (worker)", "execution_time": 0.03482341766357422, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.velux.not_null_dim_locations_location_id.70b6875476", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect location_id\nfrom VELUX_DEV.MARTS.dim_locations\nwhere location_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-02T15:15:59.717070Z", "completed_at": "2025-06-02T15:15:59.732201Z"}, {"name": "execute", "started_at": "2025-06-02T15:15:59.735847Z", "completed_at": "2025-06-02T15:15:59.735847Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.03490257263183594, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.velux.unique_dim_locations_location_id.09f471618d", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    location_id as unique_field,\n    count(*) as n_records\n\nfrom VELUX_DEV.MARTS.dim_locations\nwhere location_id is not null\ngroup by location_id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-02T15:15:59.723662Z", "completed_at": "2025-06-02T15:15:59.733279Z"}, {"name": "execute", "started_at": "2025-06-02T15:15:59.737372Z", "completed_at": "2025-06-02T15:15:59.737372Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.03534269332885742, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.velux.not_null_dim_sensors_device_id.e4990890b6", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect device_id\nfrom VELUX_DEV.MARTS.dim_sensors\nwhere device_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-02T15:15:59.738379Z", "completed_at": "2025-06-02T15:15:59.748017Z"}, {"name": "execute", "started_at": "2025-06-02T15:15:59.755047Z", "completed_at": "2025-06-02T15:15:59.755047Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.024351835250854492, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.velux.not_null_dim_sensors_measurement_unit.85ac41ebba", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect measurement_unit\nfrom VELUX_DEV.MARTS.dim_sensors\nwhere measurement_unit is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-02T15:15:59.750529Z", "completed_at": "2025-06-02T15:15:59.773438Z"}, {"name": "execute", "started_at": "2025-06-02T15:15:59.776023Z", "completed_at": "2025-06-02T15:15:59.776023Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.03202462196350098, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.velux.not_null_dim_sensors_room.b001c8477c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect room\nfrom VELUX_DEV.MARTS.dim_sensors\nwhere room is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-02T15:15:59.756566Z", "completed_at": "2025-06-02T15:15:59.774443Z"}, {"name": "execute", "started_at": "2025-06-02T15:15:59.777956Z", "completed_at": "2025-06-02T15:15:59.777956Z"}], "thread_id": "Thread-5 (worker)", "execution_time": 0.03204059600830078, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.velux.not_null_dim_sensors_sensor_id.d39dd3c588", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect sensor_id\nfrom VELUX_DEV.MARTS.dim_sensors\nwhere sensor_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-02T15:15:59.762254Z", "completed_at": "2025-06-02T15:15:59.774443Z"}, {"name": "execute", "started_at": "2025-06-02T15:15:59.778958Z", "completed_at": "2025-06-02T15:15:59.778958Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.032533884048461914, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.velux.not_null_dim_sensors_sensor_type.2e1ff9e6c0", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect sensor_type\nfrom VELUX_DEV.MARTS.dim_sensors\nwhere sensor_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-02T15:15:59.766971Z", "completed_at": "2025-06-02T15:15:59.776956Z"}, {"name": "execute", "started_at": "2025-06-02T15:15:59.779463Z", "completed_at": "2025-06-02T15:15:59.779463Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.03144574165344238, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.velux.unique_dim_sensors_sensor_id.afa6d3dbaa", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    sensor_id as unique_field,\n    count(*) as n_records\n\nfrom VELUX_DEV.MARTS.dim_sensors\nwhere sensor_id is not null\ngroup by sensor_id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-02T15:15:59.781558Z", "completed_at": "2025-06-02T15:15:59.797031Z"}, {"name": "execute", "started_at": "2025-06-02T15:15:59.799749Z", "completed_at": "2025-06-02T15:15:59.799749Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.025305509567260742, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.velux.fct_readings", "compiled": true, "compiled_code": "\n\n\n\nWITH iot_combined AS (\n    SELECT \n        event_timestamp,\n        country,\n        city,\n        sensor_type,\n        sensor_value,\n        room,\n        device_id,\n        outdoor_temperature_celsius,\n        dew_point_temperature_celsius,\n        mean_sea_level_pressure_hpa,\n        wind_speed_ms,\n        visibility_km,\n        solar_irradiance_w_m2,\n        uv_index,\n        sunshine_duration_minutes,\n        precipitation_type_description,\n\n        md5(cast(coalesce(cast(event_timestamp as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(sensor_type as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(room as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(device_id as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) AS reading_id\n\n\n     FROM VELUX_DEV.STAGING.int_iot_data_with_weather\n    \n    WHERE event_timestamp > (SELECT MAX(event_timestamp) FROM VELUX_DEV.MARTS.fct_readings)\n    \n),\n\ndim_time AS (\n    SELECT * FROM VELUX_DEV.MARTS.dim_time\n),\n\ndim_locations AS (\n    SELECT * FROM VELUX_DEV.MARTS.dim_locations\n),\n\ndim_sensors AS (\n    SELECT * FROM VELUX_DEV.MARTS.dim_sensors\n)\n\nSELECT\n    iot_combined.reading_id,\n\n    dim_time.time_id,\n    dim_locations.location_id,\n    dim_sensors.sensor_id,\n    dim_time.event_date,\n    dim_time.event_timestamp,\n    dim_sensors.device_id,\n\n    iot_combined.sensor_value,\n    iot_combined.outdoor_temperature_celsius,\n    iot_combined.dew_point_temperature_celsius,\n    iot_combined.mean_sea_level_pressure_hpa,\n    iot_combined.wind_speed_ms,\n    iot_combined.visibility_km,\n    iot_combined.solar_irradiance_w_m2,\n    iot_combined.uv_index,\n    iot_combined.sunshine_duration_minutes,\n    iot_combined.precipitation_type_description\n\nFROM iot_combined\nLEFT JOIN dim_time \n    ON iot_combined.event_timestamp = dim_time.event_timestamp\nLEFT JOIN dim_locations \n    ON iot_combined.city = dim_locations.city \n   AND iot_combined.country = dim_locations.country\nLEFT JOIN dim_sensors \n    ON iot_combined.room = dim_sensors.room \n   AND iot_combined.sensor_type = dim_sensors.sensor_type\n   AND iot_combined.device_id = dim_sensors.device_id -- Added device_id to join condition", "relation_name": "VELUX_DEV.MARTS.fct_readings", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-02T15:15:59.801383Z", "completed_at": "2025-06-02T15:15:59.821012Z"}, {"name": "execute", "started_at": "2025-06-02T15:15:59.824243Z", "completed_at": "2025-06-02T15:15:59.824243Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.029725074768066406, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.velux.not_null_dim_time_day_name.a2e1929d4a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect day_name\nfrom VELUX_DEV.MARTS.dim_time\nwhere day_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-02T15:15:59.806615Z", "completed_at": "2025-06-02T15:15:59.822014Z"}, {"name": "execute", "started_at": "2025-06-02T15:15:59.826246Z", "completed_at": "2025-06-02T15:15:59.826246Z"}], "thread_id": "Thread-5 (worker)", "execution_time": 0.030089855194091797, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.velux.not_null_dim_time_day_of_month.2366c8be4e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect day_of_month\nfrom VELUX_DEV.MARTS.dim_time\nwhere day_of_month is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-02T15:15:59.810985Z", "completed_at": "2025-06-02T15:15:59.823311Z"}, {"name": "execute", "started_at": "2025-06-02T15:15:59.826751Z", "completed_at": "2025-06-02T15:15:59.826751Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.029720783233642578, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.velux.not_null_dim_time_day_of_week.296786d878", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect day_of_week\nfrom VELUX_DEV.MARTS.dim_time\nwhere day_of_week is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-02T15:15:59.816673Z", "completed_at": "2025-06-02T15:15:59.825245Z"}, {"name": "execute", "started_at": "2025-06-02T15:15:59.834366Z", "completed_at": "2025-06-02T15:15:59.834366Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.03684067726135254, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.velux.not_null_dim_time_event_date.15d19b444b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_date\nfrom VELUX_DEV.MARTS.dim_time\nwhere event_date is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-02T15:15:59.827757Z", "completed_at": "2025-06-02T15:15:59.839033Z"}, {"name": "execute", "started_at": "2025-06-02T15:15:59.842094Z", "completed_at": "2025-06-02T15:15:59.842094Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.020079851150512695, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.velux.not_null_dim_time_event_timestamp.55d25feabe", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_timestamp\nfrom VELUX_DEV.MARTS.dim_time\nwhere event_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-02T15:15:59.843632Z", "completed_at": "2025-06-02T15:15:59.861584Z"}, {"name": "execute", "started_at": "2025-06-02T15:15:59.864423Z", "completed_at": "2025-06-02T15:15:59.864423Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.027400970458984375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.velux.not_null_dim_time_hour_of_day.6e43b14138", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect hour_of_day\nfrom VELUX_DEV.MARTS.dim_time\nwhere hour_of_day is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-02T15:15:59.848206Z", "completed_at": "2025-06-02T15:15:59.863419Z"}, {"name": "execute", "started_at": "2025-06-02T15:15:59.866981Z", "completed_at": "2025-06-02T15:15:59.866981Z"}], "thread_id": "Thread-5 (worker)", "execution_time": 0.02895069122314453, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.velux.not_null_dim_time_is_weekend.f294374ebd", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect is_weekend\nfrom VELUX_DEV.MARTS.dim_time\nwhere is_weekend is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-02T15:15:59.853241Z", "completed_at": "2025-06-02T15:15:59.865423Z"}, {"name": "execute", "started_at": "2025-06-02T15:15:59.869442Z", "completed_at": "2025-06-02T15:15:59.869442Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.03040909767150879, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.velux.not_null_dim_time_month_name.5b491402b4", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect month_name\nfrom VELUX_DEV.MARTS.dim_time\nwhere month_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-02T15:15:59.858059Z", "completed_at": "2025-06-02T15:15:59.866981Z"}, {"name": "execute", "started_at": "2025-06-02T15:15:59.874502Z", "completed_at": "2025-06-02T15:15:59.874502Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.034471988677978516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.velux.not_null_dim_time_month_number.717cfb859a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect month_number\nfrom VELUX_DEV.MARTS.dim_time\nwhere month_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-02T15:15:59.869442Z", "completed_at": "2025-06-02T15:15:59.879527Z"}, {"name": "execute", "started_at": "2025-06-02T15:15:59.882294Z", "completed_at": "2025-06-02T15:15:59.882294Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.019382953643798828, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.velux.not_null_dim_time_season.cefce22d00", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect season\nfrom VELUX_DEV.MARTS.dim_time\nwhere season is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-02T15:15:59.883226Z", "completed_at": "2025-06-02T15:15:59.908420Z"}, {"name": "execute", "started_at": "2025-06-02T15:15:59.922555Z", "completed_at": "2025-06-02T15:15:59.922555Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.046399831771850586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.velux.not_null_dim_time_time_id.6bb481dd5c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect time_id\nfrom VELUX_DEV.MARTS.dim_time\nwhere time_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-02T15:15:59.890257Z", "completed_at": "2025-06-02T15:15:59.922049Z"}, {"name": "execute", "started_at": "2025-06-02T15:15:59.924737Z", "completed_at": "2025-06-02T15:15:59.924737Z"}], "thread_id": "Thread-5 (worker)", "execution_time": 0.04671621322631836, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.velux.not_null_dim_time_year_number.780092878e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect year_number\nfrom VELUX_DEV.MARTS.dim_time\nwhere year_number is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-02T15:15:59.898018Z", "completed_at": "2025-06-02T15:15:59.923730Z"}, {"name": "execute", "started_at": "2025-06-02T15:15:59.926241Z", "completed_at": "2025-06-02T15:15:59.926241Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.04674530029296875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.velux.unique_dim_time_time_id.0752c025e8", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    time_id as unique_field,\n    count(*) as n_records\n\nfrom VELUX_DEV.MARTS.dim_time\nwhere time_id is not null\ngroup by time_id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-02T15:15:59.902937Z", "completed_at": "2025-06-02T15:15:59.924737Z"}, {"name": "execute", "started_at": "2025-06-02T15:15:59.932516Z", "completed_at": "2025-06-02T15:15:59.932516Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.05098366737365723, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.velux.dbt_expectations_expect_column_values_to_be_between_fct_readings_dew_point_temperature_celsius__70___70.557f2c7b49", "compiled": true, "compiled_code": "\n\n\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n( 1=1 and dew_point_temperature_celsius >= -70 and dew_point_temperature_celsius <= 70\n)\n as expression\n\n\n    from VELUX_DEV.MARTS.fct_readings\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-02T15:15:59.927279Z", "completed_at": "2025-06-02T15:15:59.937154Z"}, {"name": "execute", "started_at": "2025-06-02T15:15:59.940089Z", "completed_at": "2025-06-02T15:15:59.940089Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.019039392471313477, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.velux.dbt_expectations_expect_column_values_to_be_between_fct_readings_outdoor_temperature_celsius__70___70.28b8e524c0", "compiled": true, "compiled_code": "\n\n\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n( 1=1 and outdoor_temperature_celsius >= -70 and outdoor_temperature_celsius <= 70\n)\n as expression\n\n\n    from VELUX_DEV.MARTS.fct_readings\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-02T15:15:59.941681Z", "completed_at": "2025-06-02T15:15:59.963915Z"}, {"name": "execute", "started_at": "2025-06-02T15:15:59.965419Z", "completed_at": "2025-06-02T15:15:59.965419Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.031019926071166992, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.velux.dbt_expectations_expect_column_values_to_be_between_fct_readings_sensor_value__10000___100.f12c40e6cf", "compiled": true, "compiled_code": "\n\n\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n( 1=1 and sensor_value >= -100 and sensor_value <= 10000\n)\n as expression\n\n\n    from VELUX_DEV.MARTS.fct_readings\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-02T15:15:59.947688Z", "completed_at": "2025-06-02T15:15:59.965419Z"}, {"name": "execute", "started_at": "2025-06-02T15:15:59.968935Z", "completed_at": "2025-06-02T15:15:59.968935Z"}], "thread_id": "Thread-5 (worker)", "execution_time": 0.03178048133850098, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.velux.dbt_expectations_expect_column_values_to_be_between_fct_readings_solar_irradiance_w_m2__2000__0.c43262e12f", "compiled": true, "compiled_code": "\n\n\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n( 1=1 and solar_irradiance_w_m2 >= 0 and solar_irradiance_w_m2 <= 2000\n)\n as expression\n\n\n    from VELUX_DEV.MARTS.fct_readings\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-02T15:15:59.952567Z", "completed_at": "2025-06-02T15:15:59.967022Z"}, {"name": "execute", "started_at": "2025-06-02T15:15:59.970444Z", "completed_at": "2025-06-02T15:15:59.970444Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.03232860565185547, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.velux.dbt_expectations_expect_column_values_to_be_between_fct_readings_sunshine_duration_minutes__1440__0.cb891d1321", "compiled": true, "compiled_code": "\n\n\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n( 1=1 and sunshine_duration_minutes >= 0 and sunshine_duration_minutes <= 1440\n)\n as expression\n\n\n    from VELUX_DEV.MARTS.fct_readings\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-02T15:15:59.959598Z", "completed_at": "2025-06-02T15:15:59.967022Z"}, {"name": "execute", "started_at": "2025-06-02T15:15:59.970998Z", "completed_at": "2025-06-02T15:15:59.970998Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.03191018104553223, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.velux.dbt_expectations_expect_column_values_to_be_between_fct_readings_uv_index__15__0.5d4f1577f0", "compiled": true, "compiled_code": "\n\n\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n( 1=1 and uv_index >= 0 and uv_index <= 15\n)\n as expression\n\n\n    from VELUX_DEV.MARTS.fct_readings\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-02T15:15:59.972529Z", "completed_at": "2025-06-02T15:15:59.981599Z"}, {"name": "execute", "started_at": "2025-06-02T15:15:59.988884Z", "completed_at": "2025-06-02T15:15:59.988884Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.024968624114990234, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.velux.dbt_expectations_expect_column_values_to_be_between_fct_readings_visibility_km__200__0.203f85dd55", "compiled": true, "compiled_code": "\n\n\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n( 1=1 and visibility_km >= 0 and visibility_km <= 200\n)\n as expression\n\n\n    from VELUX_DEV.MARTS.fct_readings\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-02T15:15:59.983730Z", "completed_at": "2025-06-02T15:16:00.014159Z"}, {"name": "execute", "started_at": "2025-06-02T15:16:00.024441Z", "completed_at": "2025-06-02T15:16:00.024441Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.04711031913757324, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.velux.dbt_expectations_expect_column_values_to_be_between_fct_readings_wind_speed_ms__100__0.46d2317f7e", "compiled": true, "compiled_code": "\n\n\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n( 1=1 and wind_speed_ms >= 0 and wind_speed_ms <= 100\n)\n as expression\n\n\n    from VELUX_DEV.MARTS.fct_readings\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-02T15:16:00.014159Z", "completed_at": "2025-06-02T15:16:00.171040Z"}, {"name": "execute", "started_at": "2025-06-02T15:16:00.172311Z", "completed_at": "2025-06-02T15:16:00.172311Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.1898488998413086, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.velux.dbt_expectations_expect_column_values_to_be_of_type_fct_readings_event_date__DATE.e6d232b18a", "compiled": true, "compiled_code": "with relation_columns as (\n\n        \n        select\n            cast('READING_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('TIME_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('LOCATION_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SENSOR_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DEVICE_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('EVENT_TIMESTAMP' as TEXT) as relation_column,\n            cast('TIMESTAMP_NTZ' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('EVENT_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SENSOR_VALUE' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('OUTDOOR_TEMPERATURE_CELSIUS' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DEW_POINT_TEMPERATURE_CELSIUS' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('MEAN_SEA_LEVEL_PRESSURE_HPA' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('WIND_SPEED_MS' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('VISIBILITY_KM' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SOLAR_IRRADIANCE_W_M2' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('UV_INDEX' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SUNSHINE_DURATION_MINUTES' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PRECIPITATION_TYPE_DESCRIPTION' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'EVENT_DATE'\n            and\n            relation_column_type not in ('DATE')\n\n    )\n    select *\n    from test_data", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-02T15:16:00.174426Z", "completed_at": "2025-06-02T15:16:00.265941Z"}, {"name": "execute", "started_at": "2025-06-02T15:16:00.265941Z", "completed_at": "2025-06-02T15:16:00.266909Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.09348320960998535, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.velux.dbt_expectations_expect_column_values_to_be_of_type_fct_readings_mean_sea_level_pressure_hpa__FLOAT.698652548a", "compiled": true, "compiled_code": "with relation_columns as (\n\n        \n        select\n            cast('READING_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('TIME_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('LOCATION_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SENSOR_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DEVICE_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('EVENT_TIMESTAMP' as TEXT) as relation_column,\n            cast('TIMESTAMP_NTZ' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('EVENT_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SENSOR_VALUE' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('OUTDOOR_TEMPERATURE_CELSIUS' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DEW_POINT_TEMPERATURE_CELSIUS' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('MEAN_SEA_LEVEL_PRESSURE_HPA' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('WIND_SPEED_MS' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('VISIBILITY_KM' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SOLAR_IRRADIANCE_W_M2' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('UV_INDEX' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SUNSHINE_DURATION_MINUTES' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PRECIPITATION_TYPE_DESCRIPTION' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'MEAN_SEA_LEVEL_PRESSURE_HPA'\n            and\n            relation_column_type not in ('FLOAT')\n\n    )\n    select *\n    from test_data", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-02T15:16:00.269000Z", "completed_at": "2025-06-02T15:16:00.390637Z"}, {"name": "execute", "started_at": "2025-06-02T15:16:00.392287Z", "completed_at": "2025-06-02T15:16:00.392287Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.12428855895996094, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.velux.dbt_expectations_expect_column_values_to_be_of_type_fct_readings_outdoor_temperature_celsius__FLOAT.0397324e2b", "compiled": true, "compiled_code": "with relation_columns as (\n\n        \n        select\n            cast('READING_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('TIME_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('LOCATION_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SENSOR_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DEVICE_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('EVENT_TIMESTAMP' as TEXT) as relation_column,\n            cast('TIMESTAMP_NTZ' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('EVENT_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SENSOR_VALUE' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('OUTDOOR_TEMPERATURE_CELSIUS' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DEW_POINT_TEMPERATURE_CELSIUS' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('MEAN_SEA_LEVEL_PRESSURE_HPA' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('WIND_SPEED_MS' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('VISIBILITY_KM' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SOLAR_IRRADIANCE_W_M2' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('UV_INDEX' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SUNSHINE_DURATION_MINUTES' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PRECIPITATION_TYPE_DESCRIPTION' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'OUTDOOR_TEMPERATURE_CELSIUS'\n            and\n            relation_column_type not in ('FLOAT')\n\n    )\n    select *\n    from test_data", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-02T15:16:00.394964Z", "completed_at": "2025-06-02T15:16:00.487854Z"}, {"name": "execute", "started_at": "2025-06-02T15:16:00.487854Z", "completed_at": "2025-06-02T15:16:00.487854Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.09491705894470215, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.velux.dbt_expectations_expect_column_values_to_be_of_type_fct_readings_precipitation_type_description__VARCHAR.ef907bd31d", "compiled": true, "compiled_code": "with relation_columns as (\n\n        \n        select\n            cast('READING_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('TIME_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('LOCATION_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SENSOR_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DEVICE_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('EVENT_TIMESTAMP' as TEXT) as relation_column,\n            cast('TIMESTAMP_NTZ' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('EVENT_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SENSOR_VALUE' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('OUTDOOR_TEMPERATURE_CELSIUS' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DEW_POINT_TEMPERATURE_CELSIUS' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('MEAN_SEA_LEVEL_PRESSURE_HPA' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('WIND_SPEED_MS' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('VISIBILITY_KM' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SOLAR_IRRADIANCE_W_M2' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('UV_INDEX' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SUNSHINE_DURATION_MINUTES' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PRECIPITATION_TYPE_DESCRIPTION' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'PRECIPITATION_TYPE_DESCRIPTION'\n            and\n            relation_column_type not in ('VARCHAR')\n\n    )\n    select *\n    from test_data", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-02T15:15:59.990884Z", "completed_at": "2025-06-02T15:16:00.594972Z"}, {"name": "execute", "started_at": "2025-06-02T15:16:00.596484Z", "completed_at": "2025-06-02T15:16:00.596484Z"}], "thread_id": "Thread-5 (worker)", "execution_time": 0.6171844005584717, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.velux.dbt_expectations_expect_column_values_to_be_of_type_fct_readings_device_id__VARCHAR.92eda883f4", "compiled": true, "compiled_code": "with relation_columns as (\n\n        \n        select\n            cast('READING_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('TIME_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('LOCATION_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SENSOR_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DEVICE_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('EVENT_TIMESTAMP' as TEXT) as relation_column,\n            cast('TIMESTAMP_NTZ' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('EVENT_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SENSOR_VALUE' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('OUTDOOR_TEMPERATURE_CELSIUS' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DEW_POINT_TEMPERATURE_CELSIUS' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('MEAN_SEA_LEVEL_PRESSURE_HPA' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('WIND_SPEED_MS' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('VISIBILITY_KM' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SOLAR_IRRADIANCE_W_M2' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('UV_INDEX' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SUNSHINE_DURATION_MINUTES' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PRECIPITATION_TYPE_DESCRIPTION' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'DEVICE_ID'\n            and\n            relation_column_type not in ('VARCHAR')\n\n    )\n    select *\n    from test_data", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-02T15:16:00.030564Z", "completed_at": "2025-06-02T15:16:00.594972Z"}, {"name": "execute", "started_at": "2025-06-02T15:16:00.598164Z", "completed_at": "2025-06-02T15:16:00.598164Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.574859619140625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.velux.dbt_expectations_expect_column_values_to_be_of_type_fct_readings_event_timestamp__TIMESTAMP_NTZ.6df7cc191e", "compiled": true, "compiled_code": "with relation_columns as (\n\n        \n        select\n            cast('READING_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('TIME_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('LOCATION_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SENSOR_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DEVICE_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('EVENT_TIMESTAMP' as TEXT) as relation_column,\n            cast('TIMESTAMP_NTZ' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('EVENT_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SENSOR_VALUE' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('OUTDOOR_TEMPERATURE_CELSIUS' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DEW_POINT_TEMPERATURE_CELSIUS' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('MEAN_SEA_LEVEL_PRESSURE_HPA' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('WIND_SPEED_MS' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('VISIBILITY_KM' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SOLAR_IRRADIANCE_W_M2' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('UV_INDEX' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SUNSHINE_DURATION_MINUTES' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PRECIPITATION_TYPE_DESCRIPTION' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'EVENT_TIMESTAMP'\n            and\n            relation_column_type not in ('TIMESTAMP_NTZ')\n\n    )\n    select *\n    from test_data", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-02T15:16:00.006049Z", "completed_at": "2025-06-02T15:16:00.596484Z"}, {"name": "execute", "started_at": "2025-06-02T15:16:00.599669Z", "completed_at": "2025-06-02T15:16:00.599669Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.618070125579834, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.velux.dbt_expectations_expect_column_values_to_be_of_type_fct_readings_dew_point_temperature_celsius__FLOAT.316cc723d6", "compiled": true, "compiled_code": "with relation_columns as (\n\n        \n        select\n            cast('READING_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('TIME_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('LOCATION_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SENSOR_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DEVICE_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('EVENT_TIMESTAMP' as TEXT) as relation_column,\n            cast('TIMESTAMP_NTZ' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('EVENT_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SENSOR_VALUE' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('OUTDOOR_TEMPERATURE_CELSIUS' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DEW_POINT_TEMPERATURE_CELSIUS' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('MEAN_SEA_LEVEL_PRESSURE_HPA' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('WIND_SPEED_MS' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('VISIBILITY_KM' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SOLAR_IRRADIANCE_W_M2' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('UV_INDEX' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SUNSHINE_DURATION_MINUTES' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PRECIPITATION_TYPE_DESCRIPTION' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'DEW_POINT_TEMPERATURE_CELSIUS'\n            and\n            relation_column_type not in ('FLOAT')\n\n    )\n    select *\n    from test_data", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-02T15:16:00.045774Z", "completed_at": "2025-06-02T15:16:00.598164Z"}, {"name": "execute", "started_at": "2025-06-02T15:16:00.600675Z", "completed_at": "2025-06-02T15:16:00.600675Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.5595571994781494, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.velux.dbt_expectations_expect_column_values_to_be_of_type_fct_readings_location_id__VARCHAR.ac9b14772f", "compiled": true, "compiled_code": "with relation_columns as (\n\n        \n        select\n            cast('READING_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('TIME_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('LOCATION_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SENSOR_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DEVICE_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('EVENT_TIMESTAMP' as TEXT) as relation_column,\n            cast('TIMESTAMP_NTZ' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('EVENT_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SENSOR_VALUE' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('OUTDOOR_TEMPERATURE_CELSIUS' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DEW_POINT_TEMPERATURE_CELSIUS' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('MEAN_SEA_LEVEL_PRESSURE_HPA' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('WIND_SPEED_MS' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('VISIBILITY_KM' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SOLAR_IRRADIANCE_W_M2' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('UV_INDEX' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SUNSHINE_DURATION_MINUTES' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PRECIPITATION_TYPE_DESCRIPTION' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'LOCATION_ID'\n            and\n            relation_column_type not in ('VARCHAR')\n\n    )\n    select *\n    from test_data", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-02T15:16:00.490365Z", "completed_at": "2025-06-02T15:16:00.659040Z"}, {"name": "execute", "started_at": "2025-06-02T15:16:00.660038Z", "completed_at": "2025-06-02T15:16:00.660038Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.170182466506958, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.velux.dbt_expectations_expect_column_values_to_be_of_type_fct_readings_reading_id__VARCHAR.7b231376d8", "compiled": true, "compiled_code": "with relation_columns as (\n\n        \n        select\n            cast('READING_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('TIME_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('LOCATION_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SENSOR_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DEVICE_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('EVENT_TIMESTAMP' as TEXT) as relation_column,\n            cast('TIMESTAMP_NTZ' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('EVENT_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SENSOR_VALUE' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('OUTDOOR_TEMPERATURE_CELSIUS' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DEW_POINT_TEMPERATURE_CELSIUS' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('MEAN_SEA_LEVEL_PRESSURE_HPA' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('WIND_SPEED_MS' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('VISIBILITY_KM' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SOLAR_IRRADIANCE_W_M2' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('UV_INDEX' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SUNSHINE_DURATION_MINUTES' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PRECIPITATION_TYPE_DESCRIPTION' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'READING_ID'\n            and\n            relation_column_type not in ('VARCHAR')\n\n    )\n    select *\n    from test_data", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-02T15:16:00.622390Z", "completed_at": "2025-06-02T15:16:00.753753Z"}, {"name": "execute", "started_at": "2025-06-02T15:16:00.754964Z", "completed_at": "2025-06-02T15:16:00.754964Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.1492934226989746, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.velux.dbt_expectations_expect_column_values_to_be_of_type_fct_readings_solar_irradiance_w_m2__FLOAT.4033c0965f", "compiled": true, "compiled_code": "with relation_columns as (\n\n        \n        select\n            cast('READING_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('TIME_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('LOCATION_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SENSOR_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DEVICE_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('EVENT_TIMESTAMP' as TEXT) as relation_column,\n            cast('TIMESTAMP_NTZ' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('EVENT_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SENSOR_VALUE' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('OUTDOOR_TEMPERATURE_CELSIUS' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DEW_POINT_TEMPERATURE_CELSIUS' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('MEAN_SEA_LEVEL_PRESSURE_HPA' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('WIND_SPEED_MS' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('VISIBILITY_KM' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SOLAR_IRRADIANCE_W_M2' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('UV_INDEX' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SUNSHINE_DURATION_MINUTES' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PRECIPITATION_TYPE_DESCRIPTION' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'SOLAR_IRRADIANCE_W_M2'\n            and\n            relation_column_type not in ('FLOAT')\n\n    )\n    select *\n    from test_data", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-02T15:16:00.608699Z", "completed_at": "2025-06-02T15:16:00.754964Z"}, {"name": "execute", "started_at": "2025-06-02T15:16:00.755828Z", "completed_at": "2025-06-02T15:16:00.755828Z"}], "thread_id": "Thread-5 (worker)", "execution_time": 0.15244436264038086, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.velux.dbt_expectations_expect_column_values_to_be_of_type_fct_readings_sensor_id__VARCHAR.5c4002ac9d", "compiled": true, "compiled_code": "with relation_columns as (\n\n        \n        select\n            cast('READING_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('TIME_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('LOCATION_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SENSOR_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DEVICE_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('EVENT_TIMESTAMP' as TEXT) as relation_column,\n            cast('TIMESTAMP_NTZ' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('EVENT_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SENSOR_VALUE' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('OUTDOOR_TEMPERATURE_CELSIUS' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DEW_POINT_TEMPERATURE_CELSIUS' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('MEAN_SEA_LEVEL_PRESSURE_HPA' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('WIND_SPEED_MS' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('VISIBILITY_KM' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SOLAR_IRRADIANCE_W_M2' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('UV_INDEX' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SUNSHINE_DURATION_MINUTES' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PRECIPITATION_TYPE_DESCRIPTION' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'SENSOR_ID'\n            and\n            relation_column_type not in ('VARCHAR')\n\n    )\n    select *\n    from test_data", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-02T15:16:00.662461Z", "completed_at": "2025-06-02T15:16:01.077010Z"}, {"name": "execute", "started_at": "2025-06-02T15:16:01.087078Z", "completed_at": "2025-06-02T15:16:01.087078Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.4260392189025879, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.velux.dbt_expectations_expect_column_values_to_be_of_type_fct_readings_time_id__VARCHAR.d71e6abfa8", "compiled": true, "compiled_code": "with relation_columns as (\n\n        \n        select\n            cast('READING_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('TIME_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('LOCATION_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SENSOR_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DEVICE_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('EVENT_TIMESTAMP' as TEXT) as relation_column,\n            cast('TIMESTAMP_NTZ' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('EVENT_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SENSOR_VALUE' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('OUTDOOR_TEMPERATURE_CELSIUS' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DEW_POINT_TEMPERATURE_CELSIUS' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('MEAN_SEA_LEVEL_PRESSURE_HPA' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('WIND_SPEED_MS' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('VISIBILITY_KM' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SOLAR_IRRADIANCE_W_M2' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('UV_INDEX' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SUNSHINE_DURATION_MINUTES' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PRECIPITATION_TYPE_DESCRIPTION' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'TIME_ID'\n            and\n            relation_column_type not in ('VARCHAR')\n\n    )\n    select *\n    from test_data", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-02T15:16:00.629584Z", "completed_at": "2025-06-02T15:16:01.084618Z"}, {"name": "execute", "started_at": "2025-06-02T15:16:01.089003Z", "completed_at": "2025-06-02T15:16:01.089003Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.4822967052459717, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.velux.dbt_expectations_expect_column_values_to_be_of_type_fct_readings_sunshine_duration_minutes__FLOAT.e409ed115c", "compiled": true, "compiled_code": "with relation_columns as (\n\n        \n        select\n            cast('READING_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('TIME_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('LOCATION_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SENSOR_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DEVICE_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('EVENT_TIMESTAMP' as TEXT) as relation_column,\n            cast('TIMESTAMP_NTZ' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('EVENT_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SENSOR_VALUE' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('OUTDOOR_TEMPERATURE_CELSIUS' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DEW_POINT_TEMPERATURE_CELSIUS' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('MEAN_SEA_LEVEL_PRESSURE_HPA' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('WIND_SPEED_MS' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('VISIBILITY_KM' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SOLAR_IRRADIANCE_W_M2' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('UV_INDEX' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SUNSHINE_DURATION_MINUTES' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PRECIPITATION_TYPE_DESCRIPTION' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'SUNSHINE_DURATION_MINUTES'\n            and\n            relation_column_type not in ('FLOAT')\n\n    )\n    select *\n    from test_data", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-02T15:16:00.768684Z", "completed_at": "2025-06-02T15:16:01.085991Z"}, {"name": "execute", "started_at": "2025-06-02T15:16:01.090003Z", "completed_at": "2025-06-02T15:16:01.090003Z"}], "thread_id": "Thread-5 (worker)", "execution_time": 0.3312709331512451, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.velux.dbt_expectations_expect_column_values_to_be_of_type_fct_readings_visibility_km__FLOAT.5a3f2af483", "compiled": true, "compiled_code": "with relation_columns as (\n\n        \n        select\n            cast('READING_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('TIME_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('LOCATION_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SENSOR_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DEVICE_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('EVENT_TIMESTAMP' as TEXT) as relation_column,\n            cast('TIMESTAMP_NTZ' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('EVENT_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SENSOR_VALUE' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('OUTDOOR_TEMPERATURE_CELSIUS' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DEW_POINT_TEMPERATURE_CELSIUS' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('MEAN_SEA_LEVEL_PRESSURE_HPA' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('WIND_SPEED_MS' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('VISIBILITY_KM' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SOLAR_IRRADIANCE_W_M2' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('UV_INDEX' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SUNSHINE_DURATION_MINUTES' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PRECIPITATION_TYPE_DESCRIPTION' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'VISIBILITY_KM'\n            and\n            relation_column_type not in ('FLOAT')\n\n    )\n    select *\n    from test_data", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-02T15:16:00.760732Z", "completed_at": "2025-06-02T15:16:01.088004Z"}, {"name": "execute", "started_at": "2025-06-02T15:16:01.092003Z", "completed_at": "2025-06-02T15:16:01.092003Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.334275484085083, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.velux.dbt_expectations_expect_column_values_to_be_of_type_fct_readings_uv_index__FLOAT.5a59f008a6", "compiled": true, "compiled_code": "with relation_columns as (\n\n        \n        select\n            cast('READING_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('TIME_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('LOCATION_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SENSOR_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DEVICE_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('EVENT_TIMESTAMP' as TEXT) as relation_column,\n            cast('TIMESTAMP_NTZ' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('EVENT_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SENSOR_VALUE' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('OUTDOOR_TEMPERATURE_CELSIUS' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DEW_POINT_TEMPERATURE_CELSIUS' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('MEAN_SEA_LEVEL_PRESSURE_HPA' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('WIND_SPEED_MS' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('VISIBILITY_KM' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SOLAR_IRRADIANCE_W_M2' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('UV_INDEX' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SUNSHINE_DURATION_MINUTES' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PRECIPITATION_TYPE_DESCRIPTION' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'UV_INDEX'\n            and\n            relation_column_type not in ('FLOAT')\n\n    )\n    select *\n    from test_data", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-02T15:16:00.615111Z", "completed_at": "2025-06-02T15:16:01.090003Z"}, {"name": "execute", "started_at": "2025-06-02T15:16:01.093716Z", "completed_at": "2025-06-02T15:16:01.093716Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.4886908531188965, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.velux.dbt_expectations_expect_column_values_to_be_of_type_fct_readings_sensor_value__FLOAT.f1516b42ea", "compiled": true, "compiled_code": "with relation_columns as (\n\n        \n        select\n            cast('READING_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('TIME_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('LOCATION_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SENSOR_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DEVICE_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('EVENT_TIMESTAMP' as TEXT) as relation_column,\n            cast('TIMESTAMP_NTZ' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('EVENT_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SENSOR_VALUE' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('OUTDOOR_TEMPERATURE_CELSIUS' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DEW_POINT_TEMPERATURE_CELSIUS' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('MEAN_SEA_LEVEL_PRESSURE_HPA' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('WIND_SPEED_MS' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('VISIBILITY_KM' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SOLAR_IRRADIANCE_W_M2' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('UV_INDEX' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SUNSHINE_DURATION_MINUTES' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PRECIPITATION_TYPE_DESCRIPTION' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'SENSOR_VALUE'\n            and\n            relation_column_type not in ('FLOAT')\n\n    )\n    select *\n    from test_data", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-02T15:16:01.109156Z", "completed_at": "2025-06-02T15:16:01.127880Z"}, {"name": "execute", "started_at": "2025-06-02T15:16:01.130448Z", "completed_at": "2025-06-02T15:16:01.131416Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.03555631637573242, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.velux.not_null_fct_readings_device_id.a77b43db47", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect device_id\nfrom VELUX_DEV.MARTS.fct_readings\nwhere device_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-02T15:16:01.112888Z", "completed_at": "2025-06-02T15:16:01.127880Z"}, {"name": "execute", "started_at": "2025-06-02T15:16:01.133098Z", "completed_at": "2025-06-02T15:16:01.133098Z"}], "thread_id": "Thread-5 (worker)", "execution_time": 0.03627729415893555, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.velux.not_null_fct_readings_event_date.d668f3581d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_date\nfrom VELUX_DEV.MARTS.fct_readings\nwhere event_date is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-02T15:16:01.118999Z", "completed_at": "2025-06-02T15:16:01.132565Z"}, {"name": "execute", "started_at": "2025-06-02T15:16:01.135120Z", "completed_at": "2025-06-02T15:16:01.135120Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.036795616149902344, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.velux.not_null_fct_readings_event_timestamp.86f13a196e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_timestamp\nfrom VELUX_DEV.MARTS.fct_readings\nwhere event_timestamp is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-02T15:16:01.123422Z", "completed_at": "2025-06-02T15:16:01.133098Z"}, {"name": "execute", "started_at": "2025-06-02T15:16:01.135830Z", "completed_at": "2025-06-02T15:16:01.135830Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.03597664833068848, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.velux.not_null_fct_readings_location_id.867f987594", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect location_id\nfrom VELUX_DEV.MARTS.fct_readings\nwhere location_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-02T15:16:01.142409Z", "completed_at": "2025-06-02T15:16:01.166004Z"}, {"name": "execute", "started_at": "2025-06-02T15:16:01.169024Z", "completed_at": "2025-06-02T15:16:01.169024Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.03130292892456055, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.velux.not_null_fct_readings_reading_id.6386d0ff8f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect reading_id\nfrom VELUX_DEV.MARTS.fct_readings\nwhere reading_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-02T15:16:01.148197Z", "completed_at": "2025-06-02T15:16:01.167515Z"}, {"name": "execute", "started_at": "2025-06-02T15:16:01.170032Z", "completed_at": "2025-06-02T15:16:01.170032Z"}], "thread_id": "Thread-5 (worker)", "execution_time": 0.03016042709350586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.velux.not_null_fct_readings_sensor_id.7a06207ecb", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect sensor_id\nfrom VELUX_DEV.MARTS.fct_readings\nwhere sensor_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-02T15:16:01.152745Z", "completed_at": "2025-06-02T15:16:01.167515Z"}, {"name": "execute", "started_at": "2025-06-02T15:16:01.171032Z", "completed_at": "2025-06-02T15:16:01.171032Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.030159473419189453, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.velux.not_null_fct_readings_time_id.8fa755a9e5", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect time_id\nfrom VELUX_DEV.MARTS.fct_readings\nwhere time_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-02T15:16:01.157945Z", "completed_at": "2025-06-02T15:16:01.170032Z"}, {"name": "execute", "started_at": "2025-06-02T15:16:01.173264Z", "completed_at": "2025-06-02T15:16:01.173264Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.03239083290100098, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.velux.relationships_fct_readings_location_id__location_id__ref_dim_locations_.54dcf3ae94", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select location_id as from_field\n    from VELUX_DEV.MARTS.fct_readings\n    where location_id is not null\n),\n\nparent as (\n    select location_id as to_field\n    from VELUX_DEV.MARTS.dim_locations\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-02T15:16:01.179342Z", "completed_at": "2025-06-02T15:16:01.195689Z"}, {"name": "execute", "started_at": "2025-06-02T15:16:01.196760Z", "completed_at": "2025-06-02T15:16:01.196760Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.021460533142089844, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.velux.relationships_fct_readings_sensor_id__sensor_id__ref_dim_sensors_.81497e9c69", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select sensor_id as from_field\n    from VELUX_DEV.MARTS.fct_readings\n    where sensor_id is not null\n),\n\nparent as (\n    select sensor_id as to_field\n    from VELUX_DEV.MARTS.dim_sensors\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-02T15:16:01.185413Z", "completed_at": "2025-06-02T15:16:01.195761Z"}, {"name": "execute", "started_at": "2025-06-02T15:16:01.198264Z", "completed_at": "2025-06-02T15:16:01.198264Z"}], "thread_id": "Thread-5 (worker)", "execution_time": 0.021967411041259766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.velux.relationships_fct_readings_time_id__time_id__ref_dim_time_.80896ba915", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select time_id as from_field\n    from VELUX_DEV.MARTS.fct_readings\n    where time_id is not null\n),\n\nparent as (\n    select time_id as to_field\n    from VELUX_DEV.MARTS.dim_time\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-02T15:16:01.190972Z", "completed_at": "2025-06-02T15:16:01.197757Z"}, {"name": "execute", "started_at": "2025-06-02T15:16:01.198264Z", "completed_at": "2025-06-02T15:16:01.198264Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.02143239974975586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.velux.unique_fct_readings_reading_id.47dfa598e0", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    reading_id as unique_field,\n    count(*) as n_records\n\nfrom VELUX_DEV.MARTS.fct_readings\nwhere reading_id is not null\ngroup by reading_id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-02T15:16:01.100858Z", "completed_at": "2025-06-02T15:16:01.419243Z"}, {"name": "execute", "started_at": "2025-06-02T15:16:01.420257Z", "completed_at": "2025-06-02T15:16:01.420257Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.3255119323730469, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.velux.dbt_expectations_expect_column_values_to_be_of_type_fct_readings_wind_speed_ms__FLOAT.3884e931ef", "compiled": true, "compiled_code": "with relation_columns as (\n\n        \n        select\n            cast('READING_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('TIME_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('LOCATION_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SENSOR_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DEVICE_ID' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('EVENT_TIMESTAMP' as TEXT) as relation_column,\n            cast('TIMESTAMP_NTZ' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('EVENT_DATE' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SENSOR_VALUE' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('OUTDOOR_TEMPERATURE_CELSIUS' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DEW_POINT_TEMPERATURE_CELSIUS' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('MEAN_SEA_LEVEL_PRESSURE_HPA' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('WIND_SPEED_MS' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('VISIBILITY_KM' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SOLAR_IRRADIANCE_W_M2' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('UV_INDEX' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('SUNSHINE_DURATION_MINUTES' as TEXT) as relation_column,\n            cast('FLOAT' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PRECIPITATION_TYPE_DESCRIPTION' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'WIND_SPEED_MS'\n            and\n            relation_column_type not in ('FLOAT')\n\n    )\n    select *\n    from test_data", "relation_name": null, "batch_results": null}], "elapsed_time": 4.999876022338867, "args": {"macro_debugging": false, "partial_parse_file_diff": true, "require_batched_execution_for_custom_microbatch_strategy": false, "static_parser": true, "select": [], "populate_cache": true, "strict_mode": false, "log_format": "default", "write_json": true, "indirect_selection": "eager", "exclude": [], "favor_state": false, "use_colors": true, "introspect": true, "which": "generate", "use_colors_file": true, "print": true, "require_nested_cumulative_type_params": false, "compile": true, "empty_catalog": false, "version_check": true, "source_freshness_run_project_hooks": false, "static": false, "require_explicit_package_overrides_for_builtin_materializations": true, "partial_parse": true, "quiet": false, "state_modified_compare_more_unrendered_values": false, "log_format_file": "debug", "require_resource_names_without_spaces": false, "log_level": "info", "invocation_command": "dbt docs generate", "send_anonymous_usage_stats": true, "log_file_max_bytes": 10485760, "vars": {}, "log_level_file": "debug", "skip_nodes_if_on_run_start_fails": false, "warn_error_options": {"include": [], "exclude": []}, "project_dir": "C:\\Stuff\\velux_demo\\dbt\\velux", "profiles_dir": "C:\\Users\\Admin\\.dbt", "state_modified_compare_vars": false, "defer": false, "log_path": "C:\\Stuff\\velux_demo\\dbt\\velux\\logs", "show_resource_report": false, "printer_width": 80, "require_yaml_configuration_for_mf_time_spines": false, "cache_selected_only": false}}